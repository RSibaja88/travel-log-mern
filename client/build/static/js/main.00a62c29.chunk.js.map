{"version":3,"sources":["img/goldWhereWorld.png","fonts/PettingillCF-Bold.otf","fonts/YanoneKaffeesatz-Bold.otf","fonts/YanoneKaffeesatz-Regular.otf","fonts/YanoneKaffeesatz-Light.otf","API.js","NewEntryForm.js","App.js","index.js"],"names":["module","exports","API_URL","listEntries","a","fetch","response","json","createEntry","entry","method","headers","body","JSON","stringify","id","NewEntryForm","location","onClose","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","onSubmit","latitude","longitude","created","console","log","message","className","htmlFor","name","required","ref","rows","type","disabled","App","logEntries","setLogEntries","addEntry","setAddEntry","showPopup","setShowPopup","width","height","zoom","viewport","setViewport","getEntries","useEffect","src","WitW","mapboxApiAccessToken","mapStyle","onViewportChange","onDblClick","event","lngLat","map","key","_id","onClick","style","viewBox","xmlns","data-name","d","fill","closeButton","closeOnClick","dynamicPosition","sortByDepth","anchor","title","image","rating","description","visit_date","substring","deleteEntries","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a62c29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goldWhereWorld.80d956eb.png\";","module.exports = __webpack_public_path__ + \"static/media/PettingillCF-Bold.ffeb15ed.otf\";","module.exports = __webpack_public_path__ + \"static/media/YanoneKaffeesatz-Bold.13be9a83.otf\";","module.exports = __webpack_public_path__ + \"static/media/YanoneKaffeesatz-Regular.62b6a705.otf\";","module.exports = __webpack_public_path__ + \"static/media/YanoneKaffeesatz-Light.f607fb59.otf\";","const API_URL = \"http://localhost:1337\";\r\n\r\nexport async function listEntries() {\r\n  const response = await fetch(`${API_URL}/api/logs`);\r\n  return response.json();\r\n}\r\n\r\nexport async function createEntry(entry) {\r\n  const response = await fetch(`${API_URL}/api/logs`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(entry),\r\n  });\r\n  return response.json();\r\n}\r\n\r\nexport async function deleteEntries(id) {\r\n  const response = await fetch(`${API_URL}/api/logs/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  return response.json();\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createEntry } from \"./API\";\r\nimport \"./NewEntryForm.css\";\r\n\r\nconst NewEntryForm = ({ location, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async (entry) => {\r\n    try {\r\n      setLoading(true);\r\n      entry.latitude = location.latitude;\r\n      entry.longitude = location.longitude;\r\n      const created = await createEntry(entry);\r\n      console.log(\"created: \", created);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"entryForm\">\r\n      {error ? <h3>Error: {error}</h3> : null}\r\n      <label htmlFor=\"title\">Location: </label>\r\n      <input name=\"title\" required ref={register} />\r\n      <label htmlFor=\"description\">About Visit: </label>\r\n      <textarea name=\"description\" rows={3} required ref={register}></textarea>\r\n      <label htmlFor=\"image\">Image URL: </label>\r\n      <input name=\"image\" ref={register} />\r\n      <label htmlFor=\"rating\">Rating: </label>\r\n      <input name=\"rating\" type=\"number\" ref={register} />\r\n      <label htmlFor=\"visit_date\">Date Visited: </label>\r\n      <input name=\"visit_date\" type=\"date\" required ref={register} />\r\n      <button className=\"submitButton\" disabled={loading}>\r\n        {loading ? \"Pending Details\" : \"Submit Travel Log\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default NewEntryForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { listEntries, deleteEntries } from \"./API\";\nimport NewEntryForm from \"./NewEntryForm\";\nimport WitW from \"./img/goldWhereWorld.png\";\n\nimport \"./App.css\";\n\n/* eslint-disable */\n\nconst MapboxToken =\n  \"pk.eyJ1IjoicnNzaWJhamE4OCIsImEiOiJja2VtYnE5d2swNHI3MnpvejJ5Z2dvbTV2In0.O1sTV6k8TgV_jFVfFPpVbQ\";\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [addEntry, setAddEntry] = useState(null);\n  const [showPopup, setShowPopup] = useState({});\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 46.306826,\n    longitude: -56.750677,\n    zoom: 2,\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = (event) => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntry({\n      latitude,\n      longitude,\n    });\n  };\n\n  return (\n    <section className=\"mapSection\">\n      <div className=\"header\">\n        <div className=\"boxes\">\n          <div className=\"aboutTitle\">About</div>\n          <div className=\"insetShad\">\n            <p className=\"headerWords\">\n              This app serves as a personal travel log. An interactive journal\n              of \"Where in the World\" I've been able to visit. Click the map\n              markers for more details about my trip.\n            </p>\n          </div>\n        </div>\n        <img src={WitW} className=\"witwLogo\" />\n        <div className=\"boxes\">\n          <div className=\"aboutTitle\">Try it Out!</div>\n          <div className=\"insetShad\">\n            <p className=\"headerWords\">\n              If you'd like to add a travel log of your own, double-click the\n              location and submit. If you don't want to leave it on the map, you\n              can always delete your submission.\n            </p>\n          </div>\n        </div>\n      </div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={MapboxToken}\n        mapStyle=\"mapbox://styles/rssibaja88/ckf32i7yw0a4a19rxfmrru6io\"\n        onViewportChange={setViewport}\n        onDblClick={showAddMarkerPopup}\n      >\n        {logEntries.map((entry) => (\n          <div className=\"mapGroup\" key={entry._id}>\n            <Marker\n              key={entry._id}\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n            >\n              <div\n                onClick={() =>\n                  setShowPopup({\n                    // ...showPopup,\n                    [entry._id]: true,\n                  })\n                }\n              >\n                <svg\n                  className=\"marker\"\n                  style={{\n                    height: `${10 * viewport.zoom}px`,\n                    width: `${10 * viewport.zoom}px`,\n                  }}\n                  height=\"20\"\n                  viewBox=\"0 0 64 64\"\n                  width=\"20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g id=\"Place_holder\" data-name=\"Place holder\">\n                    <path\n                      d=\"m32 2a19.994 19.994 0 0 0 -20 20c0 11.05 20 40 20 40s20-28.95 20-40a19.994 19.994 0 0 0 -20-20zm0 31a11 11 0 1 1 11-11 10.994 10.994 0 0 1 -11 11z\"\n                      fill=\"#DAA520\"\n                    />\n                    <path d=\"m32 1a21.023 21.023 0 0 0 -21 21c0 11.229 19.354 39.375 20.177 40.568a1 1 0 0 0 1.646 0c.823-1.193 20.177-29.339 20.177-40.568a21.023 21.023 0 0 0 -21-21zm0 59.218c-3.748-5.579-19-28.863-19-38.218a19 19 0 0 1 38 0c0 9.353-15.252 32.638-19 38.218z\" />\n                    <path d=\"m32 10a12 12 0 1 0 12 12 12.013 12.013 0 0 0 -12-12zm0 22a10 10 0 1 1 10-10 10.011 10.011 0 0 1 -10 10z\" />\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n            {showPopup[entry._id] ? (\n              <Popup\n                latitude={entry.latitude}\n                longitude={entry.longitude}\n                closeButton={true}\n                closeOnClick={false}\n                dynamicPosition={true}\n                sortByDepth={true}\n                onClose={() => setShowPopup({})}\n                anchor=\"top\"\n              >\n                <div className=\"popCard\">\n                  <div className=\"floatbox\">\n                    <div className=\"longlat\">\n                      longitude: {entry.longitude} || latitude: {entry.latitude}\n                    </div>\n                  </div>\n                  <div className=\"infoBox\">\n                    <div className=\"blockOne\">\n                      <h3 className=\"poptitle\">{entry.title}</h3>\n                      <img className=\"popPic\" src={entry.image} />\n                      <p className=\"popRating\">Rating: {entry.rating}</p>\n                    </div>\n                    <div className=\"blockTwo\">\n                      <div className=\"entryTitle\">About the Trip</div>\n                      <p className=\"popDescription\">{entry.description}</p>\n                      <p className=\"popDate\">\n                        Date visted: {entry.visit_date.substring(0, 10)}\n                      </p>\n                      <button\n                        className=\"deleteButton\"\n                        onClick={() => {\n                          deleteEntries(entry._id);\n                          getEntries();\n                          //updates existing entries to reflect changes\n                        }}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Popup>\n            ) : null}\n          </div>\n        ))}\n        {addEntry ? (\n          <>\n            <Marker\n              key={addEntry._id}\n              latitude={addEntry.latitude}\n              longitude={addEntry.longitude}\n            >\n              <div\n                onClick={() =>\n                  setShowPopup({\n                    // ...showPopup,\n                    [addEntry._id]: true,\n                  })\n                }\n              >\n                <svg\n                  className=\"marker\"\n                  style={{\n                    height: `${8 * viewport.zoom}px`,\n                    width: `${8 * viewport.zoom}px`,\n                  }}\n                  height=\"20\"\n                  viewBox=\"0 0 64 64\"\n                  width=\"20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g id=\"Place_holder\" data-name=\"Place holder\">\n                    <path\n                      d=\"m32 2a19.994 19.994 0 0 0 -20 20c0 11.05 20 40 20 40s20-28.95 20-40a19.994 19.994 0 0 0 -20-20zm0 31a11 11 0 1 1 11-11 10.994 10.994 0 0 1 -11 11z\"\n                      fill=\"#3E4A81\"\n                    />\n                    <path d=\"m32 1a21.023 21.023 0 0 0 -21 21c0 11.229 19.354 39.375 20.177 40.568a1 1 0 0 0 1.646 0c.823-1.193 20.177-29.339 20.177-40.568a21.023 21.023 0 0 0 -21-21zm0 59.218c-3.748-5.579-19-28.863-19-38.218a19 19 0 0 1 38 0c0 9.353-15.252 32.638-19 38.218z\" />\n                    <path d=\"m32 10a12 12 0 1 0 12 12 12.013 12.013 0 0 0 -12-12zm0 22a10 10 0 1 1 10-10 10.011 10.011 0 0 1 -10 10z\" />\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n            <Popup\n              latitude={addEntry.latitude}\n              longitude={addEntry.longitude}\n              closeButton={true}\n              closeOnClick={false}\n              dynamicPosition={true}\n              sortByDepth={true}\n              onClose={() => setAddEntry(null)}\n              anchor=\"top\"\n            >\n              <div className=\"popCard2\">\n                <NewEntryForm\n                  onClose={() => {\n                    setAddEntry(null);\n                    getEntries();\n                  }}\n                  location={addEntry}\n                />\n              </div>\n            </Popup>\n          </>\n        ) : null}\n      </ReactMapGL>\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./fonts/PettingillCF-Bold.otf\";\nimport \"./fonts/YanoneKaffeesatz-Bold.otf\";\nimport \"./fonts/YanoneKaffeesatz-Regular.otf\";\nimport \"./fonts/YanoneKaffeesatz-Light.otf\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}